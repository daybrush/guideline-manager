{"version":3,"file":"guides.min.js","sources":["../src/consts.ts","../src/InnerGuides.tsx","../src/Guides.tsx","../src/index.umd.ts"],"sourcesContent":["import { GuidesOptions } from \"./types\";\n\nexport const PROPERTIES: Array<keyof GuidesOptions> = [\n    \"setGuides\",\n    \"type\", \"width\", \"height\", \"rulerStyle\",\n    \"unit\", \"zoom\", \"style\", \"backgroundColor\", \"lineColor\",\n    \"snaps\", \"snapThreshold\", \"direction\",\n    \"container\",\n    \"className\",\n    \"textColor\",\n    \"displayDragPos\",\n    \"dragPosFormat\",\n    \"cspNonce\",\n];\n\nexport const METHODS = [\n    \"getGuides\",\n    \"loadGuides\",\n    \"scroll\",\n    \"scrollGuides\",\n    \"resize\",\n] as const;\n\nexport const EVENTS = [\n    \"changeGuides\",\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n] as const;\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ref } from \"framework-utils\";\nimport ReactGuides from \"@scena/react-guides\";\nimport { GuidesOptions } from \"./types\";\n\nexport default class InnerGuides extends React.Component<GuidesOptions, GuidesOptions> {\n    public state: GuidesOptions = {};\n    public guides: ReactGuides;\n    constructor(props: GuidesOptions) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        const { container, ...state } = this.state;\n        return createPortal(<ReactGuides ref={ref(this, \"guides\")} {...state} />, container);\n    }\n}\n","import { ref, Properties } from \"framework-utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { PROPERTIES, METHODS, EVENTS } from \"./consts\";\nimport { GuidesInterface, GuideOptions } from \"@scena/react-guides/declaration/types\";\nimport InnerGuides from \"./InnerGuides\";\nimport { GuidesOptions, GuidesEvents } from \"./types\";\nimport Component from \"@egjs/component\";\nimport { camelize } from \"@daybrush/utils\";\n\n@Properties(METHODS as any, (prototype, property) => {\n    if (prototype[property]) {\n        return;\n    }\n    prototype[property] = function(...args) {\n        const self = this.getPreactGuides();\n\n        if (!self || !self[property]) {\n            return;\n        }\n        return self[property](...args);\n    };\n})\n@Properties(PROPERTIES, (prototype, property) => {\n    Object.defineProperty(prototype, property, {\n        get() {\n            return this.getPreactGuides().props[property];\n        },\n        set(value) {\n            this.innerGuides.setState({\n                [property]: value,\n            });\n        },\n        enumerable: true,\n        configurable: true,\n    });\n})\n/**\n * @sort 1\n * @extends eg.Component\n */\nclass Guides extends Component {\n    private tempElement = document.createElement(\"div\");\n    private innerGuides!: InnerGuides;\n    /**\n     * @sort 1\n     */\n    constructor(container: HTMLElement, options: Partial<GuidesOptions> = {}) {\n        super();\n        const events: any = {};\n\n        EVENTS.forEach(name => {\n            events[camelize(`on ${name}`)] = (e: any) => this.trigger(name, e);\n        });\n\n        render(\n            <InnerGuides  {...options} {...events} container={container} ref={ref(this, \"innerGuides\")} />,\n            this.tempElement,\n        );\n    }\n    /**\n     * @param state\n     * @param callback\n     */\n    public setState(state: Partial<GuideOptions>, callback?: () => void) {\n        this.innerGuides.setState(state, callback);\n    }\n    /**\n     * destroy guides\n     */\n    public destroy() {\n        render(null, this.tempElement);\n        this.tempElement = null;\n        this.innerGuides = null;\n    }\n    private getPreactGuides() {\n        return this.innerGuides.guides;\n    }\n}\ninterface Guides extends GuidesInterface {\n    on<T extends keyof GuidesEvents>(eventName: T, handlerToAttach: (event: GuidesEvents[T]) => any): this;\n    on(eventName: string, handlerToAttach: (event: { [key: string]: any }) => any): this;\n    on(events: { [key: string]: (event: { [key: string]: any }) => any }): this;\n}\n\nexport default Guides;\n","import Guides, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Guides as any)[name] = others[name];\n}\n\nexport default Guides;\n"],"names":["PROPERTIES","METHODS","EVENTS","props","_super","_this","state","__extends","_a","container","createPortal","React","ReactGuides","ref","this","options","document","createElement","events","forEach","name","camelize","e","trigger","render","InnerGuides","tempElement","callback","innerGuides","setState","guides","Guides","Properties","prototype","property","_i","args","self","getPreactGuides","Object","defineProperty","get","set","value","enumerable","configurable","others"],"mappings":";;;;;;;;2lYAEO,IAAMA,EAAyC,CAClD,YACA,OAAQ,QAAS,SAAU,aAC3B,OAAQ,OAAQ,QAAS,kBAAmB,YAC5C,QAAS,gBAAiB,YAC1B,YACA,YACA,YACA,iBACA,gBACA,YAGSC,EAAU,CACnB,YACA,aACA,SACA,eACA,UAGSC,EAAS,CAClB,eACA,YACA,OACA,y3kBClBYC,SACRC,YAAMD,gBAHHE,QAAuB,GAI1BA,EAAKC,MAAQD,EAAKF,eALeI,0BAOrC,eACUC,aAAEC,cAAWH,sZACZI,CAAaC,EAACC,MAAYC,IAAKA,EAAIC,KAAM,WAAeR,IAAWG,OATzCE,kECyCzBF,EAAwBM,gBAAAA,YAChCX,mBANIC,cAAcW,SAASC,cAAc,WAOnCC,EAAc,UAEpBhB,EAAOiB,QAAQ,SAAAC,GACXF,uFAAOG,CAAS,MAAMD,IAAW,SAACE,UAAWjB,EAAKkB,QAAQH,EAAME,MAGpEE,EACIb,EAACc,QAAiBV,EAAaG,GAAQT,UAAWA,EAAWI,IAAKA,EAAIR,EAAM,kBAC5EA,EAAKqB,eAhBInB,2CAuBjB,SAAgBD,EAA8BqB,QACrCC,YAAYC,SAASvB,EAAOqB,cAKrC,WACIH,EAAO,KAAMV,KAAKY,kBACbA,YAAc,UACdE,YAAc,wBAEvB,kBACWd,KAAKc,YAAYE,QAnC1BC,uUA/BLC,EAAW/B,EAAgB,SAACgC,EAAWC,GAChCD,EAAUC,KAGdD,EAAUC,GAAY,4BAASC,mBAAAA,IAAAC,sBACrBC,EAAOvB,KAAKwB,qBAEbD,GAASA,EAAKH,UAGZG,EAAKH,SAALG,EAAkBD,OAGhCJ,EAAWhC,EAAY,SAACiC,EAAWC,GAChCK,OAAOC,eAAeP,EAAWC,EAAU,CACvCO,sBACW3B,KAAKwB,kBAAkBnC,MAAM+B,IAExCQ,aAAIC,cACKf,YAAYC,iBACZK,GAAWS,OAGpBC,YAAY,EACZC,cAAc,OAOhBd,y6CCvCN,IAAK,IAAMX,MAAQ0B,GACdf,GAAeX,IAAQ0B,GAAO1B"}