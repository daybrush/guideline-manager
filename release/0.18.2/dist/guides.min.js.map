{"version":3,"file":"guides.min.js","sources":["../src/consts.ts","../src/InnerGuides.tsx","../src/GuidesManager.tsx","../src/Guides.tsx","../src/index.umd.ts"],"sourcesContent":["import {\n    PROPERTIES as GUIDES_PROPERTIES,\n    METHODS as GUIDES_METHODS,\n    EVENTS as GUIDES_EVENTS,\n} from \"@scena/react-guides\";\nimport {\n    GuidesOptions,\n} from \"@scena/react-guides/declaration/types\";\nexport const PROPERTIES: Array<keyof GuidesOptions> = GUIDES_PROPERTIES;\n\nexport const METHODS = GUIDES_METHODS as readonly string[];\n\nexport const EVENTS = GUIDES_EVENTS as readonly string[];\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ref } from \"framework-utils\";\nimport ReactGuides from \"@scena/react-guides\";\nimport { GuidesOptions } from \"@scena/react-guides/declaration/types\";\n\nexport interface InnerGuidesProps extends GuidesOptions {\n    container?: HTMLElement;\n}\nexport default class InnerGuides extends React.Component<InnerGuidesProps, InnerGuidesProps> {\n    public state: InnerGuidesProps = {};\n    public guides: ReactGuides;\n    constructor(props: InnerGuidesProps) {\n        super(props);\n        this.state = this.props;\n    }\n    public render() {\n        const { container, ...state } = this.state;\n        return createPortal(<ReactGuides ref={ref(this, \"guides\")} {...state} />, container);\n    }\n}\n","import { ref, Properties } from \"framework-utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { PROPERTIES, METHODS, EVENTS } from \"./consts\";\nimport { GuidesInterface, GuidesEvents, GuidesOptions } from \"@scena/react-guides/declaration/types\";\nimport InnerGuides from \"./InnerGuides\";\nimport EventEmitter from \"@scena/event-emitter\";\nimport { camelize } from \"@daybrush/utils\";\n\n@Properties(METHODS as any, (prototype, property) => {\n    if (prototype[property]) {\n        return;\n    }\n    prototype[property] = function(...args) {\n        const self = this.getInnerGuides();\n\n        if (!self || !self[property]) {\n            return;\n        }\n        return self[property](...args);\n    };\n})\n@Properties(PROPERTIES, (prototype, property) => {\n    Object.defineProperty(prototype, property, {\n        get() {\n            return this.getInnerGuides().props[property];\n        },\n        set(value) {\n            this.innerGuides.setState({\n                [property]: value,\n            });\n        },\n        enumerable: true,\n        configurable: true,\n    });\n})\n/**\n * @sort 1\n * @extends EventEmitter\n */\nclass Guides extends EventEmitter<GuidesEvents> {\n    private tempElement = document.createElement(\"div\");\n    private innerGuides!: InnerGuides;\n    /**\n     * @sort 1\n     * @param - guides' container\n     * @param {$ts:Partial<Guides.GuidesOptions>} - guides' options\n     */\n    constructor(container: HTMLElement, options: Partial<GuidesOptions> = {}) {\n        super();\n        const events: any = {};\n\n        EVENTS.forEach(name => {\n            events[camelize(`on ${name}`)] = (e: any) => this.trigger(name as any, e);\n        });\n\n        render(\n            <InnerGuides  {...options} {...events} container={container} ref={ref(this, \"innerGuides\")} />,\n            this.tempElement,\n        );\n    }\n    /**\n     * @param state\n     * @param callback\n     */\n    public setState(state: Partial<GuidesOptions>, callback?: () => void) {\n        this.innerGuides.setState(state, callback);\n    }\n    /**\n     * destroy guides\n     */\n    public destroy() {\n        render(null, this.tempElement);\n        this.tempElement = null;\n        this.innerGuides = null;\n    }\n    private getInnerGuides() {\n        return this.innerGuides.guides;\n    }\n}\ninterface Guides extends GuidesInterface {}\n\nexport default Guides;\n","import GuidesManager from \"./GuidesManager\";\n\nexport default class Guides extends GuidesManager {}\n","import Guides, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Guides as any)[name] = others[name];\n}\n\nexport default Guides;\n"],"names":["PROPERTIES","GUIDES_PROPERTIES","METHODS","EVENTS","props","_super","_this","state","__extends","_a","container","createPortal","React","ReactGuides","ref","this","options","document","createElement","events","forEach","name","camelize","e","trigger","render","InnerGuides","tempElement","callback","innerGuides","setState","guides","Guides","Properties","prototype","property","_i","args","self","getInnerGuides","Object","defineProperty","get","set","value","enumerable","configurable","EventEmitter","others"],"mappings":";;;;;;;;op6CAQaA,GAAyCC,GAEzCC,+DAEAC,wFCAGC,SACRC,YAAMD,gBAHHE,QAA0B,GAI7BA,EAAKC,MAAQD,EAAKF,eALeI,0BAOrC,eACUC,aAAEC,cAAWH,sZACZI,CAAaC,EAACC,MAAYC,IAAKA,EAAIC,KAAM,WAAeR,IAAWG,OATzCE,GC+BzC,sFCtCoCJ,iCD8CpBE,EAAwBM,gBAAAA,YAChCX,mBARIC,cAAcW,SAASC,cAAc,WASnCC,EAAc,UAEpBhB,GAAOiB,QAAQ,SAAAC,GACXF,uFAAOG,CAAS,MAAMD,IAAW,SAACE,UAAWjB,EAAKkB,QAAQH,EAAaE,MAG3EE,EACIb,EAACc,QAAiBV,EAAaG,GAAQT,UAAWA,EAAWI,IAAKA,EAAIR,EAAM,kBAC5EA,EAAKqB,eAlBInB,2CAyBjB,SAAgBD,EAA+BqB,QACtCC,YAAYC,SAASvB,EAAOqB,cAKrC,WACIH,EAAO,KAAMV,KAAKY,kBACbA,YAAc,UACdE,YAAc,uBAEvB,kBACWd,KAAKc,YAAYE,QArC1BC,uUA/BLC,EAAW/B,GAAgB,SAACgC,EAAWC,GAChCD,EAAUC,KAGdD,EAAUC,GAAY,4BAASC,mBAAAA,IAAAC,sBACrBC,EAAOvB,KAAKwB,oBAEbD,GAASA,EAAKH,UAGZG,EAAKH,SAALG,EAAkBD,OAGhCJ,EAAWjC,GAAY,SAACkC,EAAWC,GAChCK,OAAOC,eAAeP,EAAWC,EAAU,CACvCO,sBACW3B,KAAKwB,iBAAiBnC,MAAM+B,IAEvCQ,aAAIC,cACKf,YAAYC,iBACZK,GAAWS,OAGpBC,YAAY,EACZC,cAAc,OAOhBd,IAAee,uEEtCrB,IAAK,IAAM1B,MAAQ2B,GACdhB,GAAeX,IAAQ2B,GAAO3B"}